{
	"info": {
		"_postman_id": "c967f011-c5ec-452e-bdc7-c7a327a5c08f",
		"name": "Shopping Lists",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Retrieve list of shopping lists",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"Elizabet@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Retrieve the list of shopping lists =0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data).to.be.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(pm.response.json().links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the list of shopping lists =1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct number of items\", function() {",
											"    pm.expect(data.length).to.eql(1);",
											"});",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    var found = false;",
											"    for (var i in data) {",
											"        pm.expect(data[i]).to.be.not.empty;",
											"        pm.expect(data[i].id).to.be.not.empty;",
											"        pm.expect(data[i].attributes.owner).to.be.not.empty;",
											"        pm.expect(data[i].attributes.name).to.be.not.empty;",
											"        pm.expect(data[i].attributes.numberOfItems).to.eql(0);",
											"        pm.expect(data[i].attributes.updatedAt).to.be.null;",
											"        pm.expect(data[i].attributes.createdAt).to.be.not.empty;",
											"        found = true;",
											"    }",
											"    ",
											"    pm.expect(found).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create second new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name2\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the list of shopping lists >1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct number of items\", function() {",
											"    pm.expect(data.length).to.eql(2);",
											"});",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    var found = false;",
											"    for (var i in data) {",
											"        pm.expect(data[i]).to.be.not.empty;",
											"        pm.expect(data[i].id).to.be.not.empty;",
											"        pm.expect(data[i].attributes.owner).to.be.not.empty;",
											"        pm.expect(data[i].attributes.name).to.be.not.empty;",
											"        pm.expect(data[i].attributes.numberOfItems).to.eql(0);",
											"        pm.expect(data[i].attributes.updatedAt).to.be.null;",
											"        pm.expect(data[i].attributes.createdAt).to.be.not.empty;",
											"        found = true;",
											"    }",
											"    ",
											"    pm.expect(found).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request access token for user with shared shopping lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token2\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token2\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"Trever.m@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the list of shared lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct number of items\", function() {",
											"    pm.expect(data.length).to.eql(3);",
											"});",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    var found = false;",
											"    for (var i in data) {",
											"        pm.expect(data[i]).to.be.not.empty;",
											"        pm.expect(data[i].id).to.be.not.empty;",
											"        pm.expect(data[i].attributes.owner).to.be.not.empty;",
											"        pm.expect(data[i].attributes.name).to.be.not.empty;",
											"        pm.expect(data[i].attributes.numberOfItems).to.eql(0);",
											"        pm.expect(data[i].attributes.updatedAt).to.be.null;",
											"        pm.expect(data[i].attributes.createdAt).to.be.not.empty;",
											"        found = true;",
											"    }",
											"    ",
											"    pm.expect(found).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Retrieve the list of shopping lists, for anonymous customer (with X-Anonymous-Customer-Unique-Id instead of access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Anonymous-Customer-Unique-Id",
										"type": "text",
										"value": "01"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the list of shopping lists with invalid access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "af249129-eb3d-551a-971e-92f05cfe918c"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request for getting a list of shopping list without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Retrieve single shopping list",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the shopping list details by valid shopping list Id and with items >0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data).to.be.not.empty;",
											"    pm.expect(data.id).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(3);",
											"    pm.expect(data.attributes.updatedAt).to.be.null;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has shopping list item as a relationship\", function() {",
											"    pm.expect(data.relationships).to.be.not.empty;",
											"    pm.expect(data.relationships[\"shopping-list-items\"]).to.be.not.empty;",
											"    pm.expect(data.relationships[\"shopping-list-items\"].data).to.be.not.empty;",
											"    var found = false;",
											"    for (var i in data.relationships[\"shopping-list-items\"].data) {",
											"        if (data.relationships[\"shopping-list-items\"].data[i].id == pm.variables.get(\"shopping_list_item_uuid\")) {",
											"            pm.expect(data.relationships[\"shopping-list-items\"].data[i].type).to.eql(\"shopping-list-items\");",
											"            pm.expect(data.relationships[\"shopping-list-items\"].data[i].id).to.eql(pm.variables.get(\"shopping_list_item_uuid\"));",
											"            ",
											"            found = true;",
											"        }",
											"    }",
											"    pm.expect(found).to.be.true;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the shopping list details by valid shopping list Id and with items =0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data).to.be.not.empty;",
											"    pm.expect(data.id).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.null;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request access token for customer with shared shopping lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token2\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token2\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"Trever.m@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the uuid of a shared shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    for (var i in data) {",
											"        if (data[i].attributes.owner != \"Trever Meier\") {",
											"            console.log(data[i].attributes.owner);",
											"            pm.environment.set(\"shopping_list_uuid_shared\", data[i].id);",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve details of a shared list. Full access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data).to.be.not.empty;",
											"    pm.expect(data.id).to.eql(pm.variables.get(\"shopping_list_uuid_shared\"));",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(13);",
											"    pm.expect(data.attributes.updatedAt).to.be.null;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_shared}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_shared}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Retrieve the list of shopping lists, for anonymous customer (with X-Anonymous-Customer-Unique-Id instead of access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Anonymous-Customer-Unique-Id",
										"type": "text",
										"value": "01"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the list of shopping lists with invalid access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request for getting a list of shopping list without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the details of shopping list with access token of another customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for second customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name2\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "[{\"description\":\"\",\"enabled\":true,\"key\":\"X-Company-User-Id\",\"type\":\"text\",\"value\":\"64aaa033-e967-5da4-9077-bc97ebc6807f\"}]"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the details of shopping list of another customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve the details of shopping list with wrong UUID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}1",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request for getting a details of shopping list with broken URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Not Found\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shoppinglists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shoppinglists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request for getting details of shopping list with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "1"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Create Shopping List",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping with special characters in name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}!@#$%^&*()-_\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Create new shopping list for the customer with the same name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1507\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list with given name already exists.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{shopping_list_name}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"name => This value should not be blank.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer with too long name (e.g. length >255)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"name => This value is too long. It should have 255 characters or less.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list missing token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list with X-Anonymous-Customer-Unique-Id instead of access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Anonymous-Customer-Unique-Id",
										"value": "01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer with wrong type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Invalid type.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shoppinglists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer without type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Post data is invalid.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer with empty body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Post data is invalid.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer with invalid url",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Not Found\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shoppinglists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shoppinglists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer with empty attribute section",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"name => This field is missing.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "66bc321d-dc6e-4ade-a52b-143a9be30bac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6a76f7f9-2ec9-4f82-a02f-cf6da9a8a01e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "abe01d61-c256-4794-bec1-0eb65433bcf5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "947698aa-46c8-40cb-b0b2-cafdae31e22a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Patch Shopping List",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create second new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name2\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Update shopping list with valid name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list with the same name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{shopping_list_name}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list with special characters in name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{shopping_list_name}}!@#$%^&*()-_\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Update shopping list for the customer with empty attribute section",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"name => This field is missing.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list with existed name of another available shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1507\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list with given name already exists.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{shopping_list_name2}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list with empty name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"name => This value should not be blank.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer with too long name (e.g. length >255)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"name => This value is too long. It should have 255 characters or less.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer with empty UUID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1501\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer with invalid UUID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}1",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list missing token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list with X-Anonymous-Customer-Unique-Id instead of access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Anonymous-Customer-Unique-Id",
										"type": "text",
										"value": "01"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer without type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Post data is invalid.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer with invalid type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Invalid type.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shoppinglists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer with empty body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Post data is invalid.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list for the customer with invalid url",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Not Found\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shoppinglists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shoppinglists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update shopping list with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "1"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "66bc321d-dc6e-4ade-a52b-143a9be30bac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6a76f7f9-2ec9-4f82-a02f-cf6da9a8a01e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "abe01d61-c256-4794-bec1-0eb65433bcf5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "947698aa-46c8-40cb-b0b2-cafdae31e22a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Delete Shopping List",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request access token for second customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token2\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token2\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"anne.boleyn@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create second new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name2\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the second customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name_second_customer\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid_second_customer\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "e75455a1-ea9d-569e-b932-4f02e35ec325"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Delete existed shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 204 status\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid2}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Delete not existing shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete existed shopping list of another customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_second_customer}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_second_customer}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete existed shopping list without access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete existed shopping list with invalid access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Anonymous-Customer-Unique-Id",
										"type": "text",
										"value": "01",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete existed shopping list with wrong url",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Not Found\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shoppinglists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shoppinglists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete existed shopping list without uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1501\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Request for delete existed shopping without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request for delete existed shopping with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "1"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "66bc321d-dc6e-4ade-a52b-143a9be30bac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6a76f7f9-2ec9-4f82-a02f-cf6da9a8a01e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "abe01d61-c256-4794-bec1-0eb65433bcf5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "947698aa-46c8-40cb-b0b2-cafdae31e22a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Add item to Shopping List",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Add item to shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to shopping list 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (use the same sku as in previous check, or send this request twice)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data).to.be.not.empty;",
											"    pm.expect(data.id).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(6);",
											"    pm.expect(data.attributes.updatedAt).to.be.null;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has shopping list item as a relationship\", function() {",
											"    pm.expect(data.relationships).to.be.not.empty;",
											"    pm.expect(data.relationships[\"shopping-list-items\"]).to.be.not.empty;",
											"    pm.expect(data.relationships[\"shopping-list-items\"].data).to.be.not.empty;",
											"    var found = false;",
											"    var found2 = false;",
											"    for (var i in data.relationships[\"shopping-list-items\"].data) {",
											"        if (data.relationships[\"shopping-list-items\"].data[i].id == pm.variables.get(\"shopping_list_item_uuid\")) {",
											"            pm.expect(data.relationships[\"shopping-list-items\"].data[i].type).to.eql(\"shopping-list-items\");",
											"            pm.expect(data.relationships[\"shopping-list-items\"].data[i].id).to.eql(pm.variables.get(\"shopping_list_item_uuid\"));",
											"            ",
											"            found = true;",
											"        }",
											"        if (data.relationships[\"shopping-list-items\"].data[i].id == pm.variables.get(\"shopping_list_item_uuid2\")) {",
											"            pm.expect(data.relationships[\"shopping-list-items\"].data[i].type).to.eql(\"shopping-list-items\");",
											"            pm.expect(data.relationships[\"shopping-list-items\"].data[i].id).to.eql(pm.variables.get(\"shopping_list_item_uuid2\"));",
											"            ",
											"            found2 = true;",
											"        }",
											"    }",
											"    pm.expect(found).to.be.true;",
											"    pm.expect(found2).to.be.true;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (available Bundle product)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid_bundle\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_bundle}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (product unavailable)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid_unavailable\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_unavailable}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request access token for customer with shared shopping lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token2\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token2\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"Trever.m@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the uuid of a shared shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    for (var i in data) {",
											"        if (data[i].attributes.owner != \"Trever Meier\") {",
											"            pm.environment.set(\"shopping_list_uuid_shared\", data.id);",
											"            return;",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to a shared Shopping List. Full Access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_shared_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(pm.variables.get(\"sku_concrete\"));",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid_shared\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_shared}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_shared}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Add item to Shopping List (missing access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (invalid access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for second customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name2\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to not existed Shopping List (to shopping list of another customer)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid2}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid2}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (SKU does not exist in the system)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1508\");",
											"    pm.expect(errors.detail).to.eql(\"Cannot add an item to shopping list.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"non-existing-sku\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (Quantity 0)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be greater than 0.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 0}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (Big Quantity)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be of type integer.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 99999999999999999999}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (Abstract SKU)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1508\");",
											"    pm.expect(errors.detail).to.eql(\"Cannot add an item to shopping list.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_abstract}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (\"sku\": \"\")",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"sku => This value should not be blank.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List ( without \"sku\":  in the attributes body)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"sku => This field is missing.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List ( without \"quantity\":  in the attributes body)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This field is missing.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\": \"{{sku_concrete}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (with invalid quantity)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be of type integer.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[1];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be greater than 0.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\": \"{{sku_concrete}}\", \"quantity\": \"test#$%\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List without uuid (wrong url)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1501\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists//shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List without  body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Post data is invalid.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List with invalid type or empty type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Invalid type.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shoppinglistitems\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Patch Shopping list item quantity",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to shopping list",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Update item quantity in the Shopping List",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(18);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"quantity\": 18}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to Shopping List (product unavailable)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid_unavailable\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_unavailable}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity with low availability \"5\" in the Shopping List",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data).to.be.not.empty;",
											"    pm.expect(data.id).to.be.not.empty;",
											"    pm.expect(data.id).to.eql(pm.variables.get(\"shopping_list_item_uuid_unavailable\"));",
											"    pm.expect(data.attributes.quantity).to.eql(5);",
											"    pm.expect(data.attributes.sku).to.eql(pm.variables.get(\"sku_unavailable\"));",
											"});",
											"",
											"pm.test(\"Has shopping list item as a relationship\", function() {",
											"    pm.expect(data.relationships).to.be.not.empty;",
											"    pm.expect(data.relationships[\"concrete-products\"]).to.be.not.empty;",
											"    pm.expect(data.relationships[\"concrete-products\"].data).to.be.not.empty;",
											"    var found = false;",
											"    for (var i in data.relationships[\"concrete-products\"].data) {",
											"        if (data.relationships[\"concrete-products\"].data[i].id == pm.variables.get(\"sku_unavailable\")) {",
											"            pm.expect(data.relationships[\"concrete-products\"].data[i].type).to.eql(\"concrete-products\");",
											"            pm.expect(data.relationships[\"concrete-products\"].data[i].id).to.eql(pm.variables.get(\"sku_unavailable\"));",
											"            ",
											"            found = true;",
											"        }",
											"    }",
											"    pm.expect(found).to.be.true;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + pm.variables.get(\"shopping_list_item_uuid_unavailable\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"quantity\": 5}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid_unavailable}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid_unavailable}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request access token for customer with shared shopping lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token2\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token2\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"Trever.m@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the uuid of a shared shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    for (var i in data) {",
											"        if (data[i].attributes.owner != \"Trever Meier\") {",
											"            pm.environment.set(\"shopping_list_uuid_shared\", data.id);",
											"            return;",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the uuid of a shared shopping list item",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"shopping_list_item_uuid_shared\", pm.response.json().data.relationships[\"shopping-list-items\"].data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_shared}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_shared}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update items in a shared Shopping List. Full Access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_shared_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(11);",
											"    pm.expect(data.attributes.sku).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid_shared\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"quantity\": 11}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_shared}}/shopping-list-items/{{shopping_list_item_uuid_shared}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_shared}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid_shared}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Update item quantity in the Shopping List (missing access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List (invalid access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for second customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_name2\", data.attributes.name);",
											"pm.environment.set(\"shopping_list_uuid2\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.owner).to.be.not.empty;",
											"    pm.expect(data.attributes.name).to.be.not.empty;",
											"    pm.expect(data.attributes.numberOfItems).to.eql(0);",
											"    pm.expect(data.attributes.updatedAt).to.be.not.empty;",
											"    pm.expect(data.attributes.createdAt).to.be.not.empty;",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-lists\",\"attributes\":{\"name\":\"{{$guid}}\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add item to shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the not existed Shopping List (in the shopping list of another customer)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid2}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid2}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the not existed Shopping List (missing UUID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1501\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists//shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List (Quantity 0)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be greater than 0.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"quantity\": 0}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List (Quantity invalid)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be of type integer.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[1];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This value should be greater than 0.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\": \"{{sku_concrete}}\", \"quantity\": \"test#$%\"}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List  with sku instead of uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1505\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list item not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\": \"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{sku_concrete}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{sku_concrete}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List without item uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1502\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list item id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\": \"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List ( without \"quantity\":  in the attributes body)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 422 status\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"901\");",
											"    pm.expect(errors.detail).to.eql(\"quantity => This field is missing.\");",
											"    pm.expect(errors.status).to.eql(422);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List without  body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Post data is invalid.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update item quantity in the Shopping List with invalid type or empty type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.detail).to.eql(\"Invalid type.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shoppinglistitems\",\"attributes\":{\"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request to update item in Shopping List without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request to update item in with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Remove items from Shopping List",
			"item": [
				{
					"name": "Prepare",
					"item": [
						{
							"name": "Request access token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"sonia@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new shopping list for the customer",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Add item to shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 201 status\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.environment.set(\"shopping_list_item_uuid\", data.id);",
											"   ",
											"pm.test(\"Has correct attributes\", function() {",
											"    pm.expect(data.attributes).to.be.not.empty;",
											"    pm.expect(data.attributes.quantity).to.eql(3);",
											"    pm.expect(data.attributes.sku).to.eql(\"012_25904598\");",
											"});",
											"",
											"pm.test(\"Has sale label self link returned\", function () {",
											"    pm.expect(data.links.self).to.eql(pm.variables.get(\"url\") + \"/shopping-lists/\" + pm.variables.get(\"shopping_list_uuid\") + \"/shopping-list-items/\" + data.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Positive",
					"item": [
						{
							"name": "Remove items from Shopping List",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 204 status\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request access token for customer with shared shopping lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6d4095-0c31-43f6-bef7-a610d56300fd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"access_token2\", jsonData.data.attributes.accessToken);",
											"pm.environment.set(\"refresh-token2\", jsonData.data.attributes.refreshToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept-Language",
										"value": "de-DE, en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"access-tokens\",\"attributes\":{\"username\":\"Trever.m@spryker.com\", \"password\": \"change123\"}}}"
								},
								"url": {
									"raw": "{{url}}/access-tokens",
									"host": [
										"{{url}}"
									],
									"path": [
										"access-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the uuid of a shared shopping list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var data = pm.response.json().data;",
											"",
											"pm.test(\"Has correct attributes\", function() {",
											"    for (var i in data) {",
											"        if (data[i].attributes.owner != \"Trever Meier\") {",
											"            pm.environment.set(\"shopping_list_uuid_shared\", data.id);",
											"            return;",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the uuid of a shared shopping list item",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 200 status\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"shopping_list_item_uuid_shared\", pm.response.json().data.relationships[\"shopping-list-items\"].data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_shared}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_shared}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove item from a shared Shopping List. Full Access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 204 status\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "64aaa033-e967-5da4-9077-bc97ebc6807f"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid_shared}}/shopping-list-items/{{shopping_list_item_uuid_shared}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid_shared}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid_shared}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Remove items from Shopping List shopping list item does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1505\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list item not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}1",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove items from Shopping List (shopping list does not exist)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1504\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}1/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}1",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove items from Shopping List (missing access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"002\");",
											"    pm.expect(errors.detail).to.eql(\"Missing access token.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove items from Shopping List (invalid access token)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 401 status\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"001\");",
											"    pm.expect(errors.detail).to.eql(\"Invalid access token.\");",
											"    pm.expect(errors.status).to.eql(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove items from Shopping List with sku instead of uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 404 status\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1505\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list item not found.\");",
											"    pm.expect(errors.status).to.eql(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{sku_concrete}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{sku_concrete}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove items from Shopping List without item uuid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1502\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list item id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove items from Shopping List without SL uuid (wrong url)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1501\");",
											"    pm.expect(errors.detail).to.eql(\"Shopping list id is not specified.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "9aae2b90-5fa2-5729-8251-1791ba312ec2"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists//shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request to remove item from Shopping List without company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 400 status\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1401\");",
											"    pm.expect(errors.detail).to.eql(\"X-Company-User-Id header is missing.\");",
											"    pm.expect(errors.status).to.eql(400);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request to remove item from with wrong company user uuid in header",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb34127f-4dfb-4934-af9a-e657df681ad9",
										"exec": [
											"pm.test(\"Response should have 403 status\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"var errors = pm.response.json().errors[0];",
											"   ",
											"pm.test(\"Has correct error\", function() {",
											"    pm.expect(errors).to.be.not.empty;",
											"    pm.expect(errors.code).to.eql(\"1503\");",
											"    pm.expect(errors.detail).to.eql(\"Company user not found.\");",
											"    pm.expect(errors.status).to.eql(403);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aec8a384-14b5-43e0-95d6-6a1bee165c7b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Company-User-Id",
										"type": "text",
										"value": "1"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\":{\"type\":\"shopping-list-items\",\"attributes\":{\"sku\":\"{{sku_concrete}}\", \"quantity\": 3}}}"
								},
								"url": {
									"raw": "{{url}}/shopping-lists/{{shopping_list_uuid}}/shopping-list-items/{{shopping_list_item_uuid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"shopping-lists",
										"{{shopping_list_uuid}}",
										"shopping-list-items",
										"{{shopping_list_item_uuid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "87cdd7c8-10ee-4eda-9bc3-31d8f04841b9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "02817a5f-adfb-4bca-a02c-45f68df6e172",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response should not have a `500` status code\", function () {",
					"    pm.response.to.not.have.status(500);",
					"});",
					"",
					"pm.test(\"Response should be valid json\", function () {",
					"    pm.response.to.have.jsonBody('');",
					"    pm.response.to.not.have.jsonBody('error');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"id": "b472c11a-7b19-47b6-aa2f-8b527de0b40e",
			"key": "sl_name",
			"value": "",
			"type": "string"
		},
		{
			"id": "3bbe5659-bef3-4f52-be6d-df86e8f62f80",
			"key": "sku_concrete",
			"value": "012_25904598",
			"type": "string"
		},
		{
			"id": "14d5d310-83c9-4969-be0a-d95babe3fa6d",
			"key": "shopping_list_uuid_shared",
			"value": "",
			"type": "string"
		},
		{
			"id": "dba233a6-ffcc-498c-ae9c-29814caa5249",
			"key": "sku_bundle",
			"value": "210_123",
			"type": "string"
		},
		{
			"id": "cb976b34-9ba7-4d1b-bde1-40a7568952b5",
			"key": "sku_unavailable",
			"value": "210_123",
			"type": "string"
		},
		{
			"id": "d3d8a170-25f6-439b-ae2c-b5100540395c",
			"key": "sku_abstract",
			"value": "012",
			"type": "string"
		}
	]
}