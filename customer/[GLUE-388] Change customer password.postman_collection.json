{
	"info": {
		"_postman_id": "6e222aae-5a6a-4fba-8e1f-ddb5dff54c6c",
		"name": "[GLUE-388] Change customer password",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d62da5d-d90d-4547-a6af-581358d8251d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"try {",
							"    pm.environment.set(\"customer_reference\", pm.response.json().data.id);",
							"} catch(e) {",
							"    console.log(e);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.api+json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept-Language",
						"value": "de-DE, de;q=0.9, en;q=0.1"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"data\":\n\t{\n\t\t\"type\":\"register-customer\",\n\t\t\t\"attributes\":{\n\t\t\t\t\"salutation\":\"{{salutation}}\",\n\t\t\t\t\"firstName\":\"{{firstName}}\",\n\t\t\t\t\"lastName\":\"{{lastName}}\",\n\t\t\t\t\"email\":\"{{email}}\",\n\t\t\t\t\"password\":\"{{password}}\",\n\t\t\t\t\"passwordConfirmation\":\"{{password}}\",\n\t\t\t\t\"acceptedTerms\":true\n\t\t\t\t\n\t\t\t}\n\t}\n}"
				},
				"url": {
					"raw": "{{url}}/customers",
					"host": [
						"{{url}}"
					],
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66e454c3-66cd-4c79-a1ba-9fc4ee45a453",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", data.data.attributes.accessToken);",
							"postman.setEnvironmentVariable(\"refresh_token\", data.data.attributes.refreshToken);",
							"",
							"pm.test(\"Has correct type\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.type).to.eql(\"access-tokens\");",
							"});",
							"",
							"pm.test(\"Has id null\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.id).to.eql(null);",
							"});",
							"",
							"pm.test(\"Has token type Bearer\", function(){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.attributes.tokenType).to.eql(\"Bearer\");",
							"});",
							"",
							"pm.test(\"Has expiration time\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.attributes.expiresIn).to.eql(28800);",
							"});",
							"",
							"pm.test(\"Has access_token returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.attributes.accessToken).to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Has refresh_token returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.attributes.refreshToken).to.not.be.empty;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.api+json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept-Language",
						"value": "de-DE, en;q=0.9"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"data\":{\"type\":\"access_tokens\",\"attributes\":{\"username\":\"{{email}}\", \"password\": \"change123\"}}}"
				},
				"url": {
					"raw": "{{url}}/access-tokens",
					"host": [
						"{{url}}"
					],
					"path": [
						"access-tokens"
					]
				}
			},
			"response": [
				{
					"name": "Request access token",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept-Language",
								"value": "de-DE, en;q=0.9"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"data\":{\"type\":\"access_tokens\",\"attributes\":{\"username\":\"spencor.hopkin@spryker.com\", \"password\": \"change123\"}}}"
						},
						"url": {
							"raw": "{{url}}/access_tokens",
							"host": [
								"{{url}}"
							],
							"path": [
								"access_tokens"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache",
							"name": "Cache-Control",
							"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
						},
						{
							"key": "Connection",
							"value": "close",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Type",
							"value": "application/vnd.api+json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Thu, 21 Jun 2018 15:09:53 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "X-Server",
							"value": "spryker-vagrant",
							"name": "X-Server",
							"description": "Custom header"
						},
						{
							"key": "content-language",
							"value": "en_US",
							"name": "content-language",
							"description": "The language the content is in"
						}
					],
					"cookie": [],
					"body": "{\"data\":{\"type\":\"access_tokens\",\"id\":null,\"attributes\":{\"token_type\":\"Bearer\",\"expires_in\":28799,\"access_token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjI3NjYxZTJlMTk1Njc2ZDgzNTI3MDYwZDY5ODY2MGU3MjA1ODIzMTJkZTUwMjZmMTNjZDFkY2YxNjk1NmE0MTBiZGVmNzc5MDJjNGE1ZmRjIn0.eyJhdWQiOiJmcm9udGVuZCIsImp0aSI6IjI3NjYxZTJlMTk1Njc2ZDgzNTI3MDYwZDY5ODY2MGU3MjA1ODIzMTJkZTUwMjZmMTNjZDFkY2YxNjk1NmE0MTBiZGVmNzc5MDJjNGE1ZmRjIiwiaWF0IjoxNTI5NTkzNzkyLCJuYmYiOjE1Mjk1OTM3OTIsImV4cCI6MTUyOTYyMjU5Miwic3ViIjoie1wiY3VzdG9tZXJfcmVmZXJlbmNlXCI6XCJERS0tMVwiLFwiaWRfY3VzdG9tZXJcIjoxfSIsInNjb3BlcyI6WyJjdXN0b21lciJdfQ.U1Ij4aDJ7H34E8XFCXfQORCnytk7wUuGRAGkBGhhWQsHDQucgSJs8V5q820E9Z3V8lEGXoY2vpZJZ-wP41HVFMsXJo10LG6NenekOeRNVpSpBVAcys5cSCBT25sv32OqFnn-g18CkemAgKAx9qCqzIRj6hmrkGjXDWhHpphJYBX40s38hR7IDHK2DSODifm-lyivd7wIohASbi4nVTgL57TsNsiSJJaWje4mc8Vs-rcNiuwl4t6pVvHRDMlDskq_S1tNp8GXrj_ESNtesuFf_F_iiUt20tJFgdqYddeMZNIECRX1S1WQjefRVZBgvvqDUAeemVb75CAF1TCILW8S-Q\",\"refresh_token\":\"def5020076edcef1e548965759216bcb4957c4e3623e567bbcb66de2e2fdc4e00fbe539bd5d77837c48d05dfa223aeea9701eb43b808b1b71d5820222500fc4bfc045686a636cf5479c6d437f0c210e73de919b044e56471d44402496ff5253d23b9d0d821bf4925e27eb2817eba1538abb5f861a03dd0290897d97b8902e58fcd995c217309ac661d2db449417eb26fb24fd9832312a26cf065ac5122ba747044ac6eb4898fe2ef8b0ba57642c3989a5ac1dd72785098b3da12ed0d35b3f481a09a9d235386de514526e1267c8fe7178e9e229154f6c0dc9c547927ca61a6f725ca23c33930453fcae7e448dd8407d77dec07a41e8c360a3fafe5e1b50b535814e18ac513528113b2726b6414977096b1a7477d43d0bb319906c8086984f8ae182190b30103e8b4ebacc37438d7fada1c06102f870c85660c52a47d879e57e9643369206ac614a6051fd4eb1a3f4a032b74b59af84b88e1a2620b0f86b8ac59366100a9ef03b7606100f884d25d7fc56ac13c5538ccf985701b64ded1e2ec462a0800861747d2706b3184d1b3a4082b7f1e717d17092c4b70b75e5c14fb69d27dc4bdd0c0a905\"},\"links\":{\"self\":\"http:\\/\\/glue.de.shop-suite.local\\/access_tokens\\/\"}}}"
				}
			]
		},
		{
			"name": "Change password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5bde9ad8-ce9a-409c-9d82-110adb116326",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Wrong confirmation password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44d2b75e-20b7-4dd1-a163-20287d06315a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 406\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Passwords don't match.\");",
							"    pm.expect(jsonData.errors[0].code).to.eql(\"406\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"chan\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Wrong old password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b404002-07d8-480e-a81a-890ac5b8a761",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Invalid password\");",
							"    pm.expect(jsonData.errors[0].code).to.eql(\"408\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"chan3\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. New password is empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3f052ed-5e81-457f-8e17-ef669cc848af",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Invalid password\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Passwords don't match",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08adfd8a-4fb9-4892-b913-a2a2fff3a884",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 406\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Passwords don't match.\");",
							"    pm.expect(jsonData.errors[0].code).to.eql(\"406\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change123466\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Valid data with POST method",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6f1bdce5-65d5-4b19-9de1-47530164ddce",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change123466\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Valid data with Delete method",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "65c1e0a1-5074-482f-9455-6e2c9237a6bd",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Customer not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c470d5b-653c-4038-8815-e1d9df43c697",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Not authorized customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b651004-5c24-421b-93e5-d2d155f7f596",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Invalid access token.\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "qewtqetqwetqewtqwtqwt",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"change123\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change password. Wrong url",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "831a747b-d627-4eee-9493-49cbe3dc68a5",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Has correct type returned\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors[0].detail).to.eql(\"Not Found\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"data\": {\n    \"type\": \"customer-password\",\n    \"attributes\": {\n      \"password\": \"chan3\",\n      \"newPassword\": \"change1234\",\n      \"confirmPassword\": \"change1234\"\n    }\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/sss/customer-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"sss",
						"customer-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete customer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68749e00-c774-4b55-9b9a-ce0462740b61",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b4e77322-2686-4984-806b-d32b21ab994c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/customers/{{customer_reference}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"customers",
						"{{customer_reference}}"
					]
				},
				"description": "This test is to verify that request returns valid message and status code if customer does not have any addresses"
			},
			"response": []
		}
	]
}