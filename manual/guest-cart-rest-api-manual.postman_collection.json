{
	"info": {
		"_postman_id": "7ab5891c-a2a4-43f9-bd0c-cc1957032326",
		"name": "guest-cart-rest-api-manual",
		"description": "1. In spy_product table unckeck is_active field where sku = 078_24602396.\n2. Go to page http://zed.de.suite-nonsplit.local/product-management/edit/variant?id-product=97&id-product-abstract=78&type=#tab-content-price and change quantity to 0.\n3. Go to page http://zed.de.suite-nonsplit.local/product-management/edit/variant?id-product=261&id-product-abstract=182&type=#tab-content-discontinue and press \"Discontinue\" button.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Creation a guest cart",
			"item": [
				{
					"name": "Send the request with inactive product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05370552-f35d-44b3-a690-1496fc7d0ad8",
								"exec": [
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Correct error status\", function() {",
									"    pm.expect(responseJson.errors[0].status).to.eql(422);",
									"});",
									"",
									"pm.test(\"Correct error code\", function() {",
									"    pm.expect(responseJson.errors[0].code).to.eql(\"102\");",
									"});",
									"",
									"pm.test(\"Correct error message\", function() {",
									"    pm.expect(responseJson.errors[0].detail).to.eql(\"Product \" + pm.variables.get(\"sku\") + \" is not active.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"value": "10",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"guest-cart-items\",\n        \"attributes\": {\n            \"sku\": \"{{sku}}\",\n            \"quantity\": 1\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/guest-cart-items",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-cart-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send the request with low availability of product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05370552-f35d-44b3-a690-1496fc7d0ad8",
								"exec": [
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Correct error status\", function() {",
									"    pm.expect(responseJson.errors[0].status).to.eql(422);",
									"});",
									"",
									"pm.test(\"Correct error code\", function() {",
									"    pm.expect(responseJson.errors[0].code).to.eql(\"102\");",
									"});",
									"",
									"pm.test(\"Correct error message\", function() {",
									"    pm.expect(responseJson.errors[0].detail).to.eql(\"Product \" + pm.variables.get(\"not_available_sku\") + \" is not available at the moment.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"value": "10",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"guest-cart-items\",\n        \"attributes\": {\n            \"sku\": \"{{not_available_sku}}\",\n            \"quantity\": 1\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/guest-cart-items",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-cart-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send the request with discontinued product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05370552-f35d-44b3-a690-1496fc7d0ad8",
								"exec": [
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Correct error status\", function() {",
									"    pm.expect(responseJson.errors[0].status).to.eql(422);",
									"});",
									"",
									"pm.test(\"Correct error code\", function() {",
									"    pm.expect(responseJson.errors[0].code).to.eql(\"102\");",
									"});",
									"",
									"pm.test(\"Correct error message\", function() {",
									"    pm.expect(responseJson.errors[0].detail).to.eql(\"Product \" + pm.variables.get(\"discontinued_sku\") + \" is discontinued, please choose an alternative one.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"type": "text",
								"value": "10"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"guest-cart-items\",\n        \"attributes\": {\n            \"sku\": \"{{discontinued_sku}}\",\n            \"quantity\": 1\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/guest-cart-items",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-cart-items"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update an item in a guest cart",
			"item": [
				{
					"name": "Request for creating/adding a guest cart (helper)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05370552-f35d-44b3-a690-1496fc7d0ad8",
								"exec": [
									"var responseData = pm.response.json().data;",
									"",
									"pm.variables.set(\"guest_cart_id\", responseData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"value": "{{anonymous_customer_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"guest-cart-items\",\n        \"attributes\": {\n            \"sku\": \"{{sku_2}}\",\n            \"quantity\": 1\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/guest-cart-items",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-cart-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send the request with a large number \"1000+\" in the field qty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05370552-f35d-44b3-a690-1496fc7d0ad8",
								"exec": [
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Correct error status\", function() {",
									"    pm.expect(responseJson.errors[0].status).to.eql(422);",
									"});",
									"",
									"pm.test(\"Correct error code\", function() {",
									"    pm.expect(responseJson.errors[0].code).to.eql(\"102\");",
									"});",
									"",
									"pm.test(\"Correct error message\", function() {",
									"    pm.expect(responseJson.errors[0].detail).to.eql(\"Item \" + pm.variables.get(\"sku_2\") + \" only has availability of 20.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"type": "text",
								"value": "{{anonymous_customer_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"guest-cart-items\",\n        \"attributes\": {\n            \"quantity\": 999999999\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/guest-carts/{{guest_cart_id}}/guest-cart-items/{{sku_2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-carts",
								"{{guest_cart_id}}",
								"guest-cart-items",
								"{{sku_2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configure lifetime of a guest cart",
			"item": [
				{
					"name": "Request for creating/adding a guest cart (helper)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05370552-f35d-44b3-a690-1496fc7d0ad8",
								"exec": [
									"var responseData = pm.response.json().data;",
									"",
									"pm.variables.set(\"guest_cart_id\", responseData.id);",
									"",
									"pm.variables.set(\"expense_total\", responseData.attributes.totals.expenseTotal);",
									"pm.variables.set(\"discount_total\", responseData.attributes.totals.discountTotal);",
									"pm.variables.set(\"tax_total\", responseData.attributes.totals.taxTotal);",
									"pm.variables.set(\"subtotal\", responseData.attributes.totals.subtotal);",
									"pm.variables.set(\"grand_total\", responseData.attributes.totals.grandTotal);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"value": "{{anonymous_customer_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"guest-cart-items\",\n        \"attributes\": {\n            \"sku\": \"{{sku}}\",\n            \"quantity\": 1\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/guest-cart-items",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-cart-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "A case with more than 1 month and check on the local project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09587067-e655-4e6c-9698-87148832d432",
								"exec": [
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Correct error status\", function() {",
									"    pm.expect(responseJson.errors[0].status).to.eql(404);",
									"});",
									"",
									"pm.test(\"Correct error code\", function() {",
									"    pm.expect(responseJson.errors[0].code).to.eql(\"101\");",
									"});",
									"",
									"pm.test(\"Correct error message\", function() {",
									"    pm.expect(responseJson.errors[0].detail).to.eql(\"Cart with given uuid not found.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"value": "{{anonymous_customer_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/guest-carts/83551eb9-2ca2-51a1-95f4-193a5907ddf5",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-carts",
								"83551eb9-2ca2-51a1-95f4-193a5907ddf5"
							]
						}
					},
					"response": []
				},
				{
					"name": "A case with less than 1 month and check on the local project",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09587067-e655-4e6c-9698-87148832d432",
								"exec": [
									"var responseData = pm.response.json().data;",
									"",
									"pm.variables.set(\"guest_cart_id\", responseData.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has correct type\", function() {",
									"    pm.expect(responseData.type).to.eql(\"guest-carts\");",
									"});",
									"",
									"pm.test(\"Has id returned\", function() {",
									"    pm.expect(responseData.id).not.eql(null);",
									"    pm.expect(responseData.id).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"Has priceMode returned\", function() {",
									"    pm.expect(responseData.attributes.priceMode).not.eql(null);",
									"    pm.expect(responseData.attributes.priceMode).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"Has currency returned\", function() {",
									"    pm.expect(responseData.attributes.currency).not.eql(null);",
									"    pm.expect(responseData.attributes.currency).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"Has store returned\", function() {",
									"    pm.expect(responseData.attributes.store).not.eql(null);",
									"    pm.expect(responseData.attributes.store).to.be.a(\"string\");",
									"});",
									"",
									"pm.test(\"Has discounts returned\", function() {",
									"    pm.expect(responseData.attributes.discounts.length).not.eql(null);",
									"});",
									"",
									"pm.test(\"Has totals returned\", function() {",
									"    pm.expect(responseData.attributes.totals.length).not.eql(null);",
									"    ",
									"    pm.expect(responseData.attributes.totals.expenseTotal).not.eql(null);",
									"    pm.expect(responseData.attributes.totals.discountTotal).not.eql(null);",
									"    pm.expect(responseData.attributes.totals.taxTotal).not.eql(null);",
									"    pm.expect(responseData.attributes.totals.subtotal).not.eql(null);",
									"    pm.expect(responseData.attributes.totals.grandTotal).not.eql(null);",
									"});",
									"",
									"pm.test(\"Has self link\", function() {",
									"    pm.expect(responseData.links.self).to.not.be.empty;",
									"    pm.expect(responseData.links.self).to.eql(pm.variables.get(\"url\") + \"/guest-carts/\" + pm.variables.get(\"guest_cart_id\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Anonymous-Customer-Unique-Id",
								"type": "text",
								"value": "{{anonymous_customer_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/guest-carts/6197a3f7-0f7d-5c72-aa7a-cd27700e6329",
							"host": [
								"{{url}}"
							],
							"path": [
								"guest-carts",
								"6197a3f7-0f7d-5c72-aa7a-cd27700e6329"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d2d923ab-fcc2-46ba-a94b-b3e189aee08e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ac8c9724-b987-4ded-ac5d-bce34c738a4a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a1409847-4937-495a-815c-fbb6fbe5052d",
			"key": "sku",
			"value": "189_30150732",
			"type": "string"
		},
		{
			"id": "d55d0434-f386-4ba5-b3a6-02e3a6b08387",
			"key": "not_available_sku",
			"value": "078_24602396",
			"type": "string"
		},
		{
			"id": "21bdb247-f93b-4f2e-ad98-238d353ee64d",
			"key": "discontinued_sku",
			"value": "182_30345097",
			"type": "string"
		},
		{
			"id": "66fa0598-f25e-4b5f-a604-b1215248093d",
			"key": "sku_2",
			"value": "182_30345097",
			"type": "string"
		},
		{
			"id": "84662ef3-7b7b-4dc2-9262-1d7affaf6a1e",
			"key": "anonymous_customer_id",
			"value": "10",
			"type": "string"
		},
		{
			"id": "c84b761d-0149-44c5-9eaf-42cad5b6d623",
			"key": "expense_total",
			"value": "string",
			"type": "string"
		},
		{
			"id": "9470f925-20be-4ad1-a1c2-fcb3f4873b72",
			"key": "discount_total",
			"value": "string",
			"type": "string"
		},
		{
			"id": "02f8d333-eca9-412e-9988-e150ba5c2759",
			"key": "tax_total",
			"value": "string",
			"type": "string"
		},
		{
			"id": "a3ae5e90-3682-44b3-b802-9c87570a3a94",
			"key": "subtotal",
			"value": "string",
			"type": "string"
		},
		{
			"id": "1cb39a52-3b29-4994-8fdd-34c20eebaf75",
			"key": "grand_total",
			"value": "string",
			"type": "string"
		}
	]
}